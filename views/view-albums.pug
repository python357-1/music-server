- var hwin = ['header', 'white-text', 'inline']
title= 'Album View'
head
    link(rel='stylesheet', href= source_url + "/public.css")
    link(href="https://fonts.googleapis.com/css2?family=Staatliches&display=swap", rel="stylesheet")

    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css", integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2", crossorigin="anonymous")
    script(src="https://code.jquery.com/jquery-3.5.1.slim.min.js", integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj", crossorigin="anonymous")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js", integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx", crossorigin="anonymous")

    script(src="https://kit.fontawesome.com/e96570cfe7.js", crossorigin="anonymous")
    style.
        html, body {
            background-color: #223344;
        }

        .no-bullet {
            list-style-type: none;
        }

        li {
            font-size: 40px;
        }

        h1 {
            margin: 10px;
            font-size: 100px;
        }

        a {
            display: inline;
        }

        img {
            display: block;
            margin-left: auto;
            margin-right: auto;
            margin-top: 5vh;
        }
        
        .song-title {
            font-size: 4.5vh;
        }

        .play-button {
            margin-right: 20px;
        }

        .grid-container {
            display: grid;
            grid-template-columns: 33% auto 33%;
            grid-gap: 20px;
            padding-left: 3vh;
            padding-right: 3vh
        }

        .song-block {
            background-color: #334455;
            
        }

        .playing {
            color: #345;
            text-shadow:
                -2px -2px 0 #fff,
                2px -2px 0 #fff,
                -2px  2px 0 #fff,
                2px  2px 0 #fff;
        }

        .audiocontrol {
            color: white;
            font-size: 3vh;
            text-align: center;
        }
        
        .inline {
            display: inline;
        }

        #info-bar {
            position: sticky;
            bottom: 0px;
            width: 100%;
            background-color: #345;
            font-size: 2.5vh;
            height: 7vh;
            padding-left: 1vw;
        }
        
        #wrapper {
            display: inline-block;
        }

        #spacer {
            display:inline;
        }

        #volume {
            display: inline;
            position: absolute;
            right: 1vw;
            bottom: 0.5vh;
        }

        #volume-text {
            font-size: 4vh;
        }

audio(id='song-audio')
    source(id='song', type='audio/mpeg', src='')

if artistView
    h1(class=hwin)
        a(href='/app/') Album View
    h1(class=hwin)
        a(href='/app/view/playlist') Playlist View
    h1(class=hwin)
        a(href='/app/view/artistselect') Artist View
    br
    h1(class=hwin)= albums[0].artist + ":"
else 
    h1(class=hwin) Album View
    h1(class=hwin)
        a(href='/app/view/playlist') Playlist View
    h1(class=hwin)
        a(href='/app/view/artistselect') Artist View

.grid-container
    each album in albums
        div(id=album.title, class='song-block')
            img(width='300', height='300', src=`${source_url}/api/view/${album.title}`)
            
            unless artistView
                h2(class='white-text text-center')= album.artist + ': ' + album.title
            else
                h2(class='white-text text-center')= album.title
            ul.no-bullet
                each song in album.songs
                    li(class='song-title white-text')= song.title

div(id='info-bar' class='white-text')
    #wrapper
        #current-song.inline
        #spacer.inline
        #current-album.inline
        
        #spacer
        br

        .audiocontrol
            i(id='play-button', class='fas fa-play')

        #spacer

        .audiocontrol
            i(id='pause-button', class='fas fa-pause')

        #volume
            #volume-text.inline Volume:
            input(type='range', min='1', max='100')

script.
    let songTitles = document.querySelectorAll(".song-title");
    let audioPlayer = document.querySelector("#song-audio");
    let currentSong = document.querySelector("#current-song");
    let currentAlbum = document.querySelector("#current-album");
    let audioControls = document.querySelectorAll(".audiocontrol");
    let songBlocks = document.querySelectorAll('.song-block')
    let volSlider = document.querySelector('#volume').querySelector('input');
    let artistHeader = document.querySelectorAll('.header');
    let url = `{{source_url}}`

    function playSong(s, al, ar, e) {
        document.querySelectorAll('.song-title').forEach(e => {
            e.classList.remove('playing');
        })

        e.classList.add('playing');

        let mediaURL = `/api/stream/${al}/${s}`;
        audioPlayer.querySelector("#song").src = mediaURL;
        audioPlayer.load();
        audioPlayer.play();
        currentSong.textContent = ar + ' : ';

        currentAlbum.textContent = s;

        audioControls.forEach(e =>{ 
            e.style.display = 'inline';
        })
    }

    function artistPlay(parent) {
        let album = parent.querySelector('h2').innerText.split(':')[0];
        let songs = [];

        parent.querySelector('ul').childNodes.forEach(el => {
            songs.push(el.innerText)
        })

        playlist()
    }

    function playlist(album, songs, counter) {
        while (x < songs.length) {
            audioPlayer.src = source_url + `api/stream/${album}/${songs[x]}`
            counter++;
        }
    }

    volSlider.oninput = function() {
        audioPlayer.volume = this.value/100;
    }

    songTitles.forEach(e => {
        console.log('added listener to ' + e.innerHTML)
        e.addEventListener('click', function(){ playSong(e.innerHTML, e.parentElement.parentElement.id, e.parentNode.parentNode.querySelector('h2').innerText.split(':')[0], e)});
    })

    document.querySelector("#play-button").addEventListener('click', function() {
        audioPlayer.play();
    })

    document.querySelector("#pause-button").addEventListener('click', function() {
        audioPlayer.pause();
    })

    songBlocks.forEach(el => {
        el.querySelector('img').addEventListener('click', function() {
            artistPlay(el)
        })
    })

    audioControls.forEach(e => {
        e.style.display = 'none';
    });

    audioPlayer.addEventListener('ended', nextSong);